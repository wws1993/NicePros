//以下为各种函数
// 阶乘
@function fact($number) {  
  $value: 1;  
  @if $number > 0 {  
    @for $i from 1 through $number {  
      $value: $value * $i;  
    }  
  }  
  @return $value;  
}
// 幂运算 pow(x, y) => x'y
@function pow($number, $exp) {  
  $value: 1;  
  @if $exp > 0 {  
    @for $i from 1 through $exp {  
      $value: $value * $number;  
    }  
  }  
  @else if $exp < 0 {  
    @for $i from 1 through -$exp {  
      $value: $value / $number;  
    }  
  }  
  @return $value;  
}
// 角度转换啥的 用于三角函数
@function rad($angle) {  
  $unit: unit($angle);  
  $unitless: $angle / ($angle * 0 + 1);  
  
  @if $unit == deg {  
    $unitless: $unitless / 180 * PI();  
  }  
  @return $unitless;  
}
// π
@function PI() {  
  @return 3.14159265359;  
}
// 三角函数
@function sin($angle) {  
  $sin: 0;  
  $angle: rad($angle);  
  // Iterate a bunch of times.  
  @for $i from 0 through 10 {  
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);  
  }  
  @return $sin;  
} 
@function cos($angle) {  
  $cos: 0;  
  $angle: rad($angle);  
  // Iterate a bunch of times.  
  @for $i from 0 through 10 {  
    $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);  
  }  
  @return $cos;  
}
@function tan($angle) {  
  @return sin($angle) / cos($angle);  
}
// 计算绝对值
@function fabs($x) {  
    @if $x > 0 {  
        @return $x;  
    }  
    @else {  
        @return $x * -1;  
    }  
}
// 开平方根运算 2√x
@function sqrt($x) {  
    $ans: $x;  
    $del: 0.00001;  
    $pre: 0;  
    @while fabs($ans - $pre) >= $del {  
        $pre: $ans;  
        $ans: ($ans + $x / $ans) / 2;  
    }  
    @return $ans;   
}